{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAa/B,OAZe,IAAIC,SAAQ,CAACC,EAASC,KAEnC,MAAMC,EAAM,C,SAACL,E,MAAUC,GACDK,KAAKC,SAAW,GAEpCJ,EAAQE,GAGRD,EAAOC,MAnCAG,SAASC,cAAc,SAG/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOH,EAAMI,OAAON,cAAc,uBAAuBO,OACjEC,EAAOH,OAAOH,EAAMI,OAAON,cAAc,sBAAsBO,OAC/DE,EAASJ,OAAOH,EAAMI,OAAON,cAAc,wBAAwBO,OAEzE,IAAI,IAAIG,EAAG,EAAGA,EAAGD,EAAQC,IAEvBC,YAAW,KAETrB,EAAc,EAAEoB,EAAGN,EAAMI,EAAKE,GAC7BE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE/DwB,OAAM,EAACzB,SAACA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,YAE5DY,EAAMI,EAAKE","sources":["src/js/03-promises.js"],"sourcesContent":["import notiflix from 'notiflix';\n// import \"notiflix/dist/notiflix-notify-aio-3.2.5.min.js\";\n\nconst form = document.querySelector(\".form\")\n\n\nform.addEventListener(\"submit\", (event)=>{\n  event.preventDefault();\n  \n  const delay = Number(event.target.querySelector('input[name=\"delay\"]').value);\n  const step = Number(event.target.querySelector('input[name=\"step\"]').value);\n  const amount = Number(event.target.querySelector('input[name=\"amount\"]').value);\n\n  for(let i =0; i< amount; i++)\n  {\n    setTimeout(()=>  \n    {\n      createPromise(1+i, delay+step*i)\n      .then(({ position, delay }) => {\n        notiflix.Notify.success(`✅ Fulfilled promises${position} in ${delay}ms`)\n      })\n      .catch(({position, delay}) => {\n        notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }, delay+step*i)\n  }\n})\n\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) =>\n  {\n    const res = {position, delay};\n    const shouldResolve = Math.random() < 0.3;\n    if (shouldResolve){\n      resolve(res);\n    }\n    else{\n      reject(res);\n    }\n  })\n  \n  return promis;\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","res","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","i","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f3f144d2.js.map"}