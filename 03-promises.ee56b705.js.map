{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAG/BC,iBAAiB,UAAU,SAACC,G,kBAS7BC,YAAW,WAcf,IAAuBC,EAAUC,GAAVD,EAZH,EAAEE,EAYWD,EAZRE,EAAMC,EAAKF,EAanB,IAAIG,SAAQ,SAACC,EAASC,GAEnC,IAAMC,EAAM,CAACR,WAAUC,SACDQ,KAAKC,SAAW,GAEpCJ,EAAQE,GAGRD,EAAOC,OApBNG,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,UAEvEgB,OAAM,SAAAL,G,IAAEZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,EAAApB,GAASqB,OAAOI,QAAQ,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,YAEpEE,EAAMC,EAAKF,IAjBhBJ,EAAMqB,iBAMN,IAJA,IAAMhB,EAAQiB,OAAOtB,EAAMuB,OAAOzB,cAAc,uBAAuB0B,OACjElB,EAAOgB,OAAOtB,EAAMuB,OAAOzB,cAAc,sBAAsB0B,OAC/DC,EAASH,OAAOtB,EAAMuB,OAAOzB,cAAc,wBAAwB0B,OAEjEE,EAAG,EAAGA,EAAGD,EAAQC,IAAGC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import notiflix from 'notiflix';\n// import \"notiflix/dist/notiflix-notify-aio-3.2.5.min.js\";\n\nconst form = document.querySelector(\".form\")\n\n\nform.addEventListener(\"submit\", (event)=>{\n  event.preventDefault();\n  \n  const delay = Number(event.target.querySelector('input[name=\"delay\"]').value);\n  const step = Number(event.target.querySelector('input[name=\"step\"]').value);\n  const amount = Number(event.target.querySelector('input[name=\"amount\"]').value);\n\n  for(let i =0; i< amount; i++)\n  {\n    setTimeout(()=>  \n    {\n      createPromise(1+i, delay+step*i)\n      .then(({ position, delay }) => {\n        notiflix.Notify.success(`✅ Fulfilled promises${position} in ${delay}ms`)\n      })\n      .catch(({position, delay}) => {\n        notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }, delay+step*i)\n  }\n})\n\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) =>\n  {\n    const res = {position, delay};\n    const shouldResolve = Math.random() < 0.3;\n    if (shouldResolve){\n      resolve(res);\n    }\n    else{\n      reject(res);\n    }\n  })\n  \n  return promis;\n}"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","event","setTimeout","position","delay","i","delay1","step","Promise","resolve","reject","res","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","Number","target","value","amount","i1","_loop"],"version":3,"file":"03-promises.ee56b705.js.map"}